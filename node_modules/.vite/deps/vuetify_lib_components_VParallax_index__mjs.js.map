{
  "version": 3,
  "sources": ["../../vuetify/src/components/VParallax/VParallax.tsx"],
  "sourcesContent": ["// Styles\nimport './VParallax.sass'\n\n// Components\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\n\n// Utilities\nimport { defineComponent, getScrollParent, useRender } from '@/util'\nimport { onBeforeUnmount, ref, watch, watchEffect } from 'vue'\n\nfunction floor (val: number) {\n  return Math.floor(Math.abs(val)) * Math.sign(val)\n}\n\nexport const VParallax = defineComponent({\n  name: 'VParallax',\n\n  props: {\n    scale: {\n      type: [Number, String],\n      default: 1.3,\n    },\n  },\n\n  setup (props, { slots }) {\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n\n    const root = ref<VImg>()\n\n    watchEffect(() => {\n      intersectionRef.value = root.value?.$el\n    })\n\n    let scrollParent: Element\n    watch(isIntersecting, val => {\n      if (val) {\n        scrollParent = getScrollParent(intersectionRef.value)\n        scrollParent = scrollParent === document.scrollingElement ? document as any : scrollParent\n        scrollParent.addEventListener('scroll', onScroll, { passive: true })\n        onScroll()\n      } else {\n        scrollParent.removeEventListener('scroll', onScroll)\n      }\n    })\n\n    onBeforeUnmount(() => {\n      scrollParent?.removeEventListener('scroll', onScroll)\n    })\n\n    let frame = -1\n    function onScroll () {\n      if (!isIntersecting.value) return\n\n      cancelAnimationFrame(frame)\n      frame = requestAnimationFrame(() => {\n        const el: HTMLElement | null = (root.value?.$el as Element).querySelector('.v-img__img')\n        if (!el) return\n\n        const rect = intersectionRef.value!.getBoundingClientRect()\n        const scrollHeight = scrollParent.clientHeight ?? window.innerHeight\n        const scrollPos = scrollParent.scrollTop ?? window.scrollY\n        const top = rect.top + scrollPos\n        const progress = (scrollPos + scrollHeight - top) / (rect.height + scrollHeight)\n        const translate = floor((rect.height * +props.scale - rect.height) * (-progress + 0.5))\n\n        el.style.setProperty('transform', `translateY(${translate}px) scale(${props.scale})`)\n      })\n    }\n\n    useRender(() => (\n      <VImg\n        class={[\n          'v-parallax',\n          { 'v-parallax--active': isIntersecting.value },\n        ]}\n        ref={ root }\n        cover\n        onLoadstart={ onScroll }\n        onLoad={ onScroll }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VParallax = InstanceType<typeof VParallax>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA;AAYA,SAASA,MAAOC,KAAa;AAC3B,SAAOC,KAAKF,MAAME,KAAKC,IAAIF,GAAT,CAAX,IAA4BC,KAAKE,KAAKH,GAAV;AACpC;AAEM,IAAMI,YAAYC,gBAAgB;EACvCC,MAAM;EAENC,OAAO;IACLC,OAAO;MACLC,MAAM,CAACC,QAAQC,MAAT;MACNC,SAAS;IAFJ;EADF;EAOPC,MAAON,OAAF,MAAoB;AAAA,QAAX;MAAEO;IAAF,IAAW;AACvB,UAAM;MAAEC;MAAiBC;IAAnB,IAAsCC,wBAAuB;AAEnE,UAAMC,OAAOC,IAAG;AAEhBC,gBAAY,MAAM;AAAA,UAAA;AAChBL,sBAAgBM,SAAhB,cAAwBH,KAAKG,UAA7B,OAAA,SAAwB,YAAYC;IACrC,CAFU;AAIX,QAAIC;AACJC,UAAMR,gBAAgBhB,SAAO;AAC3B,UAAIA,KAAK;AACPuB,uBAAeE,gBAAgBV,gBAAgBM,KAAjB;AAC9BE,uBAAeA,iBAAiBG,SAASC,mBAAmBD,WAAkBH;AAC9EA,qBAAaK,iBAAiB,UAAUC,UAAU;UAAEC,SAAS;QAAX,CAAlD;AACAD,iBAAQ;MACT,OAAM;AACLN,qBAAaQ,oBAAoB,UAAUF,QAA3C;MACD;IACF,CATI;AAWLG,oBAAgB,MAAM;AAAA,UAAA;AACpB,OAAA,gBAAAT,iBAAY,OAAZ,SAAA,cAAcQ,oBAAoB,UAAUF,QAA5C;IACD,CAFc;AAIf,QAAII,QAAQ;AACZ,aAASJ,WAAY;AACnB,UAAI,CAACb,eAAeK;AAAO;AAE3Ba,2BAAqBD,KAAD;AACpBA,cAAQE,sBAAsB,MAAM;AAAA,YAAA,cAAA,uBAAA;AAClC,cAAMC,OAAyB,eAAClB,KAAKG,UAAN,OAAA,SAAC,aAAYC,KAAgBe,cAAc,aAA3C;AAC/B,YAAI,CAACD;AAAI;AAET,cAAME,OAAOvB,gBAAgBM,MAAOkB,sBAAvB;AACb,cAAMC,gBAAY,wBAAGjB,aAAakB,iBAAhB,OAAA,wBAAgCC,OAAOC;AACzD,cAAMC,aAAS,wBAAGrB,aAAasB,cAAhB,OAAA,wBAA6BH,OAAOI;AACnD,cAAMC,MAAMT,KAAKS,MAAMH;AACvB,cAAMI,YAAYJ,YAAYJ,eAAeO,QAAQT,KAAKW,SAAST;AACnE,cAAMU,YAAYnD,OAAOuC,KAAKW,SAAS,CAAC1C,MAAMC,QAAQ8B,KAAKW,WAAW,CAACD,WAAW,IAA3D;AAEvBZ,WAAGe,MAAMC,YAAY,aAAc,cAAaF,sBAAsB3C,MAAMC,QAA5E;MACD,CAZ4B;IAa9B;AAED6C,cAAU,MAAA,YAAA,MAAA;MAAA,SAEC,CACL,cACA;QAAE,sBAAsBrC,eAAeK;MAAvC,CAFK;MAFD,OAMAH;MANA,SAAA;MAAA,eAQQW;MARR,UASGA;IATH,GAUIf,KAVJ,CAAD;AAcT,WAAO,CAAA;EACR;AAtEsC,CAAD;",
  "names": ["floor", "val", "Math", "abs", "sign", "VParallax", "defineComponent", "name", "props", "scale", "type", "Number", "String", "default", "setup", "slots", "intersectionRef", "isIntersecting", "useIntersectionObserver", "root", "ref", "watchEffect", "value", "$el", "scrollParent", "watch", "getScrollParent", "document", "scrollingElement", "addEventListener", "onScroll", "passive", "removeEventListener", "onBeforeUnmount", "frame", "cancelAnimationFrame", "requestAnimationFrame", "el", "querySelector", "rect", "getBoundingClientRect", "scrollHeight", "clientHeight", "window", "innerHeight", "scrollPos", "scrollTop", "scrollY", "top", "progress", "height", "translate", "style", "setProperty", "useRender"]
}
